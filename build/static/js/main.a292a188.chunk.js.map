{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","type","onClick","addPerson","Persons","filterPersons","persons","filter","person","name","toLowerCase","includes","map","key","id","number","handleDelete","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","undefined","className","App","useState","setPersons","useEffect","personService","setNewName","setNewNumber","setNewFilter","myMessage","setMyMessage","event","target","preventDefault","selectedPerson","find","window","confirm","personName","changedPerson","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a292a188.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => (\n    <div>\n          filter shown with <input value={props.newFilter} onChange={props.handleFilterChange}/>\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => (\n  <form>\n    <div>\n      name: <input value={props.newName} onChange={props.handleNameChange}/>\n    </div>\n    <div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\" onClick={props.addPerson}>add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = (props) => {\n    const filterPersons = props.persons\n                            .filter(person => person.name\n                                                    .toLowerCase().includes(props.newFilter\n                                                                                    .toLowerCase()))\n\n    return(\n        <div>\n            {filterPersons.map(person => \n                <p key={person.id}>\n                    {person.name} {person.number}\n                    <button onClick={()=>props.handleDelete(person.id)}>delete</button>\n                    </p>\n            )}\n        </div>\n    )}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst removeElement = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n\nexport default { getAll, create, update, removeElement }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\n\nconst Notification = ({ message }) => {\n  if (message === undefined) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ myMessage, setMyMessage] = useState([])\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n  \n  const handleDelete = (id) => {\n    const personName = persons.find(person => person.id === id).name\n    if (window.confirm(`Delete ${personName} ?`)) {\n    personService\n      .removeElement(id)\n      .then(() => setPersons(persons.filter((person)=> person.id !== id)))\n      .catch( error => {\n        setMyMessage({message: `Information of ${personName} has already been removed from server`, type: 'error'})\n        setTimeout(() => {setMyMessage([])}, 5000)\n      })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const selectedPerson = persons.find(person => person.name === newName)\n    if (selectedPerson) {\n      if (window.confirm(`${selectedPerson.personName} is already added to phonebook, replace the old number with a new one?`)) {\n        const changedPerson = {...selectedPerson, number:newNumber}\n        personService\n          .update(selectedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== selectedPerson.id ? person : returnedPerson))\n            setMyMessage({message: `Changed phone number of ${returnedPerson.name}`, type: 'success'})\n            setTimeout(() => {setMyMessage([])}, 5000)\n          })\n          .catch( error => {\n            setMyMessage({message: `Information of ${selectedPerson.name} has already been removed from server`, type: 'error'})\n            setPersons(persons.filter((person)=> person.id !== selectedPerson.id))\n            setTimeout(() => {setMyMessage([])}, 5000)\n          })\n      }\n    }else{\n      const personObject = {\n        name : newName,\n        number: newNumber\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMyMessage({message: `Added ${returnedPerson.name}`, type: 'success'})\n          setTimeout(() => {setMyMessage([])}, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={myMessage} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h3>Add a new</h3>\n      <PersonForm newName={newName} handleNameChange={handleNameChange}\n                  newNumber= {newNumber} handleNumberChange={handleNumberChange}\n                  addPerson={addPerson}/>\n      <h3>Numbers</h3>\n      <Persons persons={persons} newFilter={newFilter} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}